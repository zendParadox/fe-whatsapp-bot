// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider  = "postgresql"
  url       = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
}

// Enum untuk tipe transaksi
enum TransactionType {
  INCOME
  EXPENSE
}

// BARU: Enum untuk metode pembayaran
enum PaymentMethodType {
  CASH
  SHOPEEPAY
  GOPAY
  BANK_TRANSFER
  DEBIT_CARD
  CREDIT_CARD
  E_WALLET // Untuk e-wallet lainnya
}

// üë§ Model untuk pengguna aplikasi
model User {
  id           String   @id @default(uuid())
  email        String   @unique
  name         String?
  password     String
  whatsapp_jid String?  @unique
  created_at   DateTime @default(now())

  transactions Transaction[]
  categories   Category[]
  budgets      Budget[]
}

// üè∑Ô∏è Model untuk kategori transaksi
model Category {
  id    String @id @default(uuid())
  name  String

  user_id String
  user    User   @relation(fields: [user_id], references: [id], onDelete: Cascade)

  transactions Transaction[]
  budgets      Budget[]

  @@unique([user_id, name])
}

// üéØ Model untuk budget bulanan
model Budget {
  id        String  @id @default(uuid())
  amount    Decimal @db.Decimal(12, 2)
  month     Int // 1-12
  year      Int

  category_id String
  category    Category @relation(fields: [category_id], references: [id], onDelete: Cascade)

  user_id String
  user    User   @relation(fields: [user_id], references: [id], onDelete: Cascade)

  @@unique([user_id, category_id, month, year])
}

// üîÑ Model Transaction yang sudah di-refactor
model Transaction {
  id          String   @id @default(uuid())
  type        TransactionType
  amount      Decimal  @db.Decimal(12, 2)
  description String?
  created_at  DateTime @default(now())

  // DIUBAH: Tambahkan kolom payment_method
  payment_method PaymentMethodType? // Opsional, agar tidak error pada data lama & transaksi INCOME

  user_id String
  user    User   @relation(fields: [user_id], references: [id], onDelete: Cascade)

  category_id String?
  category    Category? @relation(fields: [category_id], references: [id], onDelete: SetNull)

  @@index([user_id])
  @@index([category_id])
}